# .github/workflows/ci.yml
name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest black flake8
    
    - name: Code formatting check
      run: black --check --diff .
    
    - name: Linting
      run: flake8 . --max-line-length=88 --extend-ignore=E203,W503
    
    - name: Run tests
      env:
        GNEWS_API_KEY: ${{ secrets.GNEWS_API_KEY || 'mock_test_key' }}
        DATABASE_PATH: test_news.db
        ENVIRONMENT: testing
      run: |
        # Basic component tests
        python -c "import config; print('Config loaded')"
        python -c "from storage import NewsDB; NewsDB(); print('Database OK')"
        python -c "from transform import NewsProcessor; NewsProcessor(); print('Processor OK')"
    
    - name: Cleanup
      if: always()
      run: rm -f test_news.db

  docker:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    timeout-minutes: 10
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Build Docker image
      run: docker build -t news-intelligence-pipeline:latest .
    
    - name: Test Docker container
      run: |
        docker run -d -p 8501:8501 \
          -e GNEWS_API_KEY=mock_test_key \
          -e ENVIRONMENT=testing \
          --name test-container \
          news-intelligence-pipeline:latest
        
        # Wait for startup
        sleep 10
        
        # Basic health check
        docker exec test-container curl -f http://localhost:8501/_stcore/health || echo "Health check failed"
        
        # Cleanup
        docker stop test-container
        docker rm test-container
